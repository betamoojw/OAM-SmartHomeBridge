;
; global custom
;
[custom]
build_flags =
  ${KNX_TP.build_flags}
	-D ESPALEXA_MAXDEVICES=41 #Limit of 41 is the same as the limit for homespan
  -D KNX_FLASH_SIZE=0 #Setting not used because partion knx is used, but must be defined
#  -D OPENKNX_DUALCORE
  -D OPENKNX_LOOPTIME_WARNING=5
 # -D ESPALEXA_DEBUG

[custom_develop]
extends = custom
build_flags =
  ${custom.build_flags}
  ;-D OPENKNX_HEARTBEAT
  ; -D OPENKNX_HEARTBEAT_PRIO
  ; -D OPENKNX_RTT
  ; -D BUFFER_SIZE_UP=10240
  ; -D DEBUG_LOOP_TIME=10 ; will print a info when a loop took more than x ms.
  ; -D LOGIC_TRACE
  ; ; to see trace logs, they must match one of the 5 filters (TRACE_LOG1 .. TRACE_LOG2)
  "-D OPENKNX_TRACE1=OTAUpdateModule.*"
  "-D OPENKNX_TRACE2=Flash.*"
debug_build_flags = -ggdb3
  -O0


; ESP32
[ESP32_custom]
extends = ESP32, custom
build_flags =
  ${ESP32.build_flags}
  -D SERIAL_DEBUG=Serial
  -D KNX_FLASH_CALLBACK
build_unflags =
  -D LWIP_DONT_PROVIDE_BYTEORDER_FUNCTIONS
lib_deps = 
	#homespan/HomeSpan@1.8.0
  HomeSpan=symlink://../HomeSpan
  
[develop_ESP32]
extends = ESP32_develop, ESP32_custom, custom_develop
build_flags =
  ${ESP32_develop.build_flags}
  ${ESP32_custom.build_flags}
  ${custom_develop.build_flags}
  -D LED_BUILTIN=2
  -D KNX_SERIAL=Serial2
  -D DEVELOPMENT
board_build.partitions = esp_partition.csv


[env:develop_ESP32_USB]
extends = ESP32_UPLOAD_USB, develop_ESP32

[env:develop_ESP32_OTA]
extends = develop_ESP32
upload_protocol = espota
upload_port =  XXX# 192.168.0.27 # IP Address



[env:develop_Adafruit_Feather_ESP32_V2]
extends = ESP32_develop, ESP32_custom, custom_develop
build_flags =
  ${ESP32_develop.build_flags}
  ${ESP32_custom.build_flags}
  ${custom_develop.build_flags}
  -D KNX_SERIAL=Serial1
  -D KNX_UART_RX_PIN=34
  -D KNX_UART_TX_PIN=25
  -D PROG_LED_PIN=LED_BUILTIN
  -D PROG_LED_PIN_ACTIVE_ON=HIGH
  -D PROG_LED_PIN2=8
  -D PROG_LED_PIN3=22
  -D PROG_BUTTON_PIN=38
  -D PROG_BUTTON_PIN2=7
  -D PROG_BUTTON_PIN2_INTERRUPT_ON=FALLING
  -D PROG_BUTTON_PIN3=20
  -D PROG_BUTTON_PIN3_INTERRUPT_ON=FALLING
  -D KNX_IP_WIFI
  -D KNX_NETIF=WiFi
  -D DEVELOPMENT
board = adafruit_feather_esp32_v2
framework = arduino
#monitor_speed = 115200
board_build.partitions = esp_partition_8MB.csv

[env:develop_Adafruit_Feather_ESP32_V2_USB]
extends = ESP32_UPLOAD_USB, env:develop_Adafruit_Feather_ESP32_V2

[env:develop_Adafruit_Feather_ESP32_V2_OTA]
extends = env:develop_Adafruit_Feather_ESP32_V2
upload_protocol = espota
upload_port = 192.168.0.30 # IP Address


; ------ REG1 ESP ------
[env:develop_REG1_ESP_DEV_TP_NET_USB]
extends = ESP32_develop, ESP32_custom, ESP32_libs, ESP32_UPLOAD_USB
build_flags =
  ${KNX_TP.build_flags}
  ${ESP32_develop.build_flags}
  ${ESP32_custom.build_flags}
  ${custom_develop.build_flags}
  -D BOARD_REG1_ESP_DEVBOARD_V00_02
  -D CONFIG_ETH_ENABLED
  -D KNX_IP_LAN
  -D BOARD_HAS_PSRAM
  -D OPENKNX_DUALCORE
  #-D LED_BUILTIN=4
  -UKNX_IP_WIFI
  -UKNX_NETIF
;board = esp32dev
board = adafruit_feather_esp32_v2
board_build.partitions = esp_partition_8MB.csv
monitor_port= /dev/cu.usbserial-10	
monitor_speed = 115200


[env:develop_REG1_ESP_DEV_TP_NET_PROG]
extends = env:develop_REG1_ESP_DEV_TP_NET_USB, UPLOAD_ESP_PROG
build_flags =
  ${env:develop_REG1_ESP_DEV_TP_NET_USB.build_flags}



; Verbose
;build_flags = -DCORE_DEBUG_LEVEL=5

; Debug

;upload_port = COM6

; ; RP2040
; [RP2040_custom]
; extends = RP2040, custom
; build_flags =
;   -D SERIAL_DEBUG=Serial

; [env:develop_RP2040]
; extends = RP2040_develop, RP2040_custom, custom_develop
; build_flags =
;   ${RP2040_develop.build_flags}
;   ${RP2040_custom.build_flags}
;   ${custom_develop.build_flags}

; [env:develop_RP2040_DUALCORE]
; extends = env:develop_RP2040
; build_flags =
;   ${env:develop_RP2040.build_flags}
;   -D OPENKNX_DUALCORE

; [env:develop_RP2040_USB]
; extends = RP2040_UPLOAD_USB, env:develop_RP2040

; [env:develop_RP2040_JLINK]
; extends = UPLOAD_JLINK, env:develop_RP2040

; [env:develop_RP2040_DUALCORE_USB]
; extends = UPLOAD_USB_RP2040, env:develop_RP2040_DUALCORE

; [env:develop_RP2040_DUALCORE_JLINK]
; extends = UPLOAD_JLINK, env:develop_RP2040_DUALCORE



