[platformio]
libdeps_dir = /tmp/libdeps
extra_configs =
  lib/OGM-Common/platformio.base.ini
  lib/OGM-Common/platformio.rp2040.ini
  lib/OGM-Common/platformio.samd.ini
  lib/OGM-Common/platformio.esp32.ini

;
; global custom
;
[custom]
build_flags =
  ${KNX_TP.build_flags}
	-D ESPALEXA_MAXDEVICES=41 #Limit of 41 is the same as the limit for homespan
  -D KNX_FLASH_SIZE=0 #Setting not used because partion knx is used, but must be defined
  -D OPENKNX_LOOPTIME_WARNING=5
 # -D ESPALEXA_DEBUG

[custom_develop]
extends = custom
build_flags =
  ${custom.build_flags}
  ;-D OPENKNX_HEARTBEAT
  ; -D OPENKNX_HEARTBEAT_PRIO
  ; -D OPENKNX_RTT
  ; -D BUFFER_SIZE_UP=10240
  ; -D DEBUG_LOOP_TIME=10 ; will print a info when a loop took more than x ms.
  ; -D LOGIC_TRACE
  ; ; to see trace logs, they must match one of the 5 filters (TRACE_LOG1 .. TRACE_LOG2)
  "-D OPENKNX_TRACE1=OTAUpdateModule.*"
  "-D OPENKNX_TRACE2=Flash.*"
debug_build_flags = -ggdb3
  -O0


; ESP32
[ESP32_custom]
extends = ESP32, custom
build_flags =
  -D SERIAL_DEBUG=Serial
  -D KNX_SERIAL=Serial2
  -D LED_BUILTIN=1
  -D KNX_FLASH_CALLBACK
build_unflags =
  -D LWIP_DONT_PROVIDE_BYTEORDER_FUNCTIONS
board_build.partitions = esp_partition.csv
lib_deps = 
	homespan/HomeSpan@1.7.2
  
[env:develop_ESP32]
extends = ESP32_develop, ESP32_custom, custom_develop
build_flags =
  ${ESP32_develop.build_flags}
  ${ESP32_custom.build_flags}
  ${custom_develop.build_flags}

[env:develop_ESP32_USB]
extends = ESP32_UPLOAD_USB, env:develop_ESP32

[env:develop_ESP32_OTA]
extends = env:develop_ESP32
upload_protocol = espota
upload_port = 192.168.0.17 # IP Address

; ; RP2040
; [RP2040_custom]
; extends = RP2040, custom
; build_flags =
;   -D SERIAL_DEBUG=Serial

; [env:develop_RP2040]
; extends = RP2040_develop, RP2040_custom, custom_develop
; build_flags =
;   ${RP2040_develop.build_flags}
;   ${RP2040_custom.build_flags}
;   ${custom_develop.build_flags}

; [env:develop_RP2040_DUALCORE]
; extends = env:develop_RP2040
; build_flags =
;   ${env:develop_RP2040.build_flags}
;   -D OPENKNX_DUALCORE

; [env:develop_RP2040_USB]
; extends = RP2040_UPLOAD_USB, env:develop_RP2040

; [env:develop_RP2040_JLINK]
; extends = UPLOAD_JLINK, env:develop_RP2040

; [env:develop_RP2040_DUALCORE_USB]
; extends = UPLOAD_USB_RP2040, env:develop_RP2040_DUALCORE

; [env:develop_RP2040_DUALCORE_JLINK]
; extends = UPLOAD_JLINK, env:develop_RP2040_DUALCORE

; ; SAMD
; [SAMD_custom]
; extends = SAMD, custom
; build_flags =
;   -D OPENKNX_NO_BOOT_PULSATING
;   -D SERIAL_DEBUG=SerialUSB
;   -D KNX_SERIAL=Serial

; [env:develop_SAMD]
; extends = SAMD_develop, SAMD_custom, custom_develop
; build_flags =
;   ${SAMD_develop.build_flags}
;   ${SAMD_custom.build_flags}
;   ${custom_develop.build_flags}

; [env:develop_SAMD_USB]
; extends = SAMD_UPLOAD_USB, env:develop_SAMD

; [env:develop_SAMD_JLINK]
; extends = UPLOAD_JLINK, env:develop_SAMD

